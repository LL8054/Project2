git remote add origin https://github.com/LL8054/datasciencecoursera.git
git remote add origin https://github.com/LL8054/datasciencecoursera.git
git push -u origin master
git remote add origin https://github.com/LL8054/datasciencecoursera.git
git push -u origin master
## This is a markdown file
git remote add origin https://github.com/LL8054/datasciencecoursera.git
git push -u origin master
git remote add origin https://github.com/LL8054/datasciencecoursera.git
git push -u origin master
q()
install.packages("KernSmooth"")
library(kernsmooth)
library("KernSmooth", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
library(swirl)
swirl()
swirl()
head(flags)
dim(flags)
viewinfo()
class(flags)
cls_list <- lapply(flags,class)
cls_lis
cls_list
class(cls_list)
cls_list
as.character(cls_list)
cls_vect <- sapply(flags,class)
class(cls-vect)
class(cls_vect)
sum(flag$orange)
sum(flags$orange)
flag_colors <- flags[,11:17]
head(flag_colors)
lapply(flag_colors, sum)
sapply(flag_colors,sum)
sapply(flag_colors, mean)
flag_shapes <- [,19:23]
flag_shapes <- flags[,19:23]
lapply(flag_shapes,range)
sapply(flag_shapes,range)
shape_mat <- sapply(flag_shapes,range)
shape_mat
class(shape_mat)
unique(c(3,4,5,5,5,5,5,5,6,6,6))
unique(c(3,4,5,5,5,6,6,))
unique(c(3,4,5,5,5,6,6))
lapply(flags,unique)
unique_ vals <- lapply(flags,unique)
unique_vals <- lapply(flags,unique)
unique_vals
sapply(unique_vals,length)
sapply(flags,unique)
lapply(unique_vals, function(elem elem[2]))
lapply(unique_vals, function(elem) elem[2]))
lapply(unique_vals, function(elem) elem[2])
sapply(flags,unique)
vapply(flags,unique,numeric)1))
ok()
sapply(flags,class)
vapply(flags,class,character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate, flags$landmass, mean)
tapply(flags$population, flags$red, summary)
tapply(flags$population, flags$landmasses, summary)
tapply(flags$population, flags$landmass, summary)
exit
bye()
library(datasets)
datasets(iris)
data(iris)
?iris
iris
tapply(sepal.length, species, mean)
tapply(Sepal.Length, Species, mean)
tapply(iris, Sepal.Length, Species, mean)
tapply(iris, Sepal.Length, mean)
tapply(iris$sepal.length, iris$species, mean)
tapply(iris$Speal.Length, iris$Species, mean)
tapply(iris$Sepal.Length, iris$Species, mean)
apply(iris[1:4]1, mean)
apply(iris[1:4],1, mean)
apply(iris[1:4],2, mean)
?apply
apply(iris[,1:4],2, mean)
apply(iris, 2, mean)
apply(iris,1,mean)
library(datasets)
data(mtcars)
?mtcars
head(mtcars)
tapply(mtcars$mpg,mtcars$cyl,mean)
tapply(mtcars$hp,mtcars$cyl,mean)
[tapply(mtcars$hp,mtcars$cyl,mean),1] - [tapply(mtcars$hp,mtcars$cyl,mean),3]
i <- tapply(mtcars$mpg,mtcars$cyl,mean)
i
i[3]-i[1]
tapply(mtcars$hp,mtcars$cyl,mean),[1] - tapply(mtcars$hp,mtcars$cyl,mean),[3]
tapply(mtcars$hp,mtcars$cyl,mean)[1] - tapply(mtcars$hp,mtcars$cyl,mean)[3]
tapply(mtcars$hp,mtcars$cyl,mean)[3]
rm(i)
i
i <- tapply(mtcars$hp, mtcars$cyl, mean)
i
i[3] - i[1]
tapply(mtcars$hp, mtcars$cyl, mean)[3] - tapply(mcars$hp, mtcars$cyl, mean)[1]
tapply(mtcars$hp, mtcars$cyl, mean)[3] - tapply(mtcars$hp, mtcars$cyl, mean)[1]
debug(ls)
ls
debug(ls)
ls(2)
bye()
exit
close
close()
exit()
quit()
quit
quit
library("swirl")
swirl()
quit9)
quit()
install.packages("RMySQL")
Sys.setenv(PKG_CPPFLAGS = "-I/usr/local/include/mysql")
Sys.setenv(PKG_LIBS = "-L/usr/local/lib -lmysqlclient")
install.packages("RMySQL", type = "source")
library(RMySQL)
library(DBI)
library(RMySQL)
example(points)
?gl
?par
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
library(lattice)
library(datasets)
data(airquality)
p <- xyplot(Ozone ~ Wind | factor(Month), data = airquality)
p
?splom
?print.trellis()
?plom
?splom
?trellis.par.set
?par
library(datasets)
data(airquality)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
install.packages("ggplot2")
library(ggplot2)
install.packages("lattice")
install.packages("lattice")
install.packages("lattice")
install.packages("lattice")
install.packages("lattice")
install.packages("lattice")
library("lattice")
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
library(ggplot2)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
library(ggplot2)
g <- ggplot(movies, aes(votes, rating))
print(g)
movies
str(movies)
g
library(ggplot2)
g <- ggplot(movies, aes(votes, rating))
summary(g)
g + geom_point()
qplot(votes, rating, data = movies)
qplot(votes, rating, data = movies) + geom(smooth)
qplot(votes, rating, data = movies) + geom_smooth()
?llines()
?axis
?llines()
install.packages("myplclust")
library(myplclust)
install.packages("rcolorbrewer")
install.packages("RColorBrewer")
library(RColorBrewer)
setwd("~/datasciencecoursera/Courses/ExploratoryDataAnalysis/Project2")
NEI <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
View(NEI)
View(SCC)
table(SCC$EI.Sector)
table(SCC$Short.Name)
table(SCC$EI.Sector)
SCCs <- SCC[grep("*Mobile*", SCC$EI.Sector),]
View(SCCs)
SCCs <- SCC[grep("*Vehicle*", SCC$EI.Sector),]
SCCs <- SCC[grep("*Mobile*", SCC$EI.Sector),]
df <- NEI[which(NEI$SCC %in% SCCs$SCC),]
View(df)
source('~/datasciencecoursera/Courses/ExploratoryDataAnalysis/Project2/plot2.R')
source('~/datasciencecoursera/Courses/ExploratoryDataAnalysis/Project2/plot2.R')
source('~/datasciencecoursera/Courses/ExploratoryDataAnalysis/Project2/plot3.R')
library(ggplot2)
source('~/datasciencecoursera/Courses/ExploratoryDataAnalysis/Project2/plot3.R')
df <- subset(df, df$fips == "24510")
point <- subset(df, df$type == "POINT")
nonpoint <- subset(df, df$type == "NONPOINT")
onroad <- subset(df, df$type == "ON-ROAD")
nonroad <- subset(df, df$type == "NON-ROAD")
NEI <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
## Subsets SCC data frame into Mobile Vehicle Related data
SCCs <- SCC[grep("*Mobile*", SCC$EI.Sector),]
## Subsets NEI data frame into Vehicle related data.
df <- NEI[which(NEI$SCC %in% SCCs$SCC),]
## Subsets Vehicle related data frame further into Baltimore City, MD data.
df <- subset(df, df$fips == "24510")  ##Baltimore City subset
## Subsets df data frame by Source Type then Year
point <- subset(df, df$type == "POINT")
nonpoint <- subset(df, df$type == "NONPOINT")
onroad <- subset(df, df$type == "ON-ROAD")
nonroad <- subset(df, df$type == "NON-ROAD")
point99 <- subset(point, point$year == 1999)
nonpoint99 <- subset(nonpoint, nonpoint$year == 1999)
onroad99 <- subset(onroad, onroad$year == 1999)
nonroad99 <- subset(nonroad, nonroad$year == 1999)
point02 <- subset(point, point$year == 2002)
nonpoint02 <- subset(nonpoint, nonpoint$year == 2002)
onroad02 <- subset(onroad, onroad$year == 2002)
nonroad02 <- subset(nonroad, nonroad$year == 2002)
point05 <- subset(point, point$year == 2005)
nonpoint05 <- subset(nonpoint, nonpoint$year == 2005)
onroad05 <- subset(onroad, onroad$year == 2005)
nonroad05 <- subset(nonroad, nonroad$year == 2005)
point08 <- subset(point, point$year == 2008)
nonpoint08 <- subset(nonpoint, nonpoint$year == 2008)
onroad08 <- subset(onroad, onroad$year == 2008)
nonroad08 <- subset(nonroad, nonroad$year == 2008)
## Sums of PM2.5 emissions per type per year
point99sum <- sum(point99$Emissions)
nonpoint99sum <- sum(nonpoint99$Emissions)
onroad99sum <- sum(onroad99$Emissions)
nonroad99sum <- sum(nonroad99$Emissions)
point02sum <- sum(point02$Emissions)
nonpoint02sum <- sum(nonpoint02$Emissions)
onroad02sum <- sum(onroad02$Emissions)
nonroad02sum <- sum(nonroad02$Emissions)
point05sum <- sum(point05$Emissions)
nonpoint05sum <- sum(nonpoint05$Emissions)
onroad05sum <- sum(onroad05$Emissions)
nonroad05sum <- sum(nonroad05$Emissions)
point08sum <- sum(point08$Emissions)
nonpoint08sum <- sum(nonpoint08$Emissions)
onroad08sum <- sum(onroad08$Emissions)
nonroad08sum <- sum(nonroad08$Emissions)
sums <- c(point99sum, nonpoint99sum, point02sum, nonpoint02sum, point05sum,
nonpoint05sum, point08sum, nonpoint08sum)
sums <- round(sums, digits=2)
years <- c(1999, 2002, 2005, 2008)
data <- data.frame(sums, c("point", "nonpoint, onroad, nonroad"), rep(years, each=4))
colnames(data) <- c("Total PM2.5", "Type", "Year")
View(data)
sums <- c(point99sum, nonpoint99sum, onroad99sum, nonroad99sum, point02sum, nonpoint02sum, onroad02sum,
nonroad02sum, point05sum, nonpoint05sum, onroad05sum, nonroad05sum, point08sum, nonpoint08sum,
onroad08sum, nonroad08sum)
sums <- round(sums, digits=2)
years <- c(1999, 2002, 2005, 2008)
data <- data.frame(sums, c("point", "nonpoint, onroad, nonroad"), rep(years, each=4))
colnames(data) <- c("Total PM2.5", "Type", "Year")
View(data)
sums <- c(point99sum, nonpoint99sum, onroad99sum, nonroad99sum, point02sum, nonpoint02sum, onroad02sum,
nonroad02sum, point05sum, nonpoint05sum, onroad05sum, nonroad05sum, point08sum, nonpoint08sum,
onroad08sum, nonroad08sum)
sums <- round(sums, digits=2)
years <- c(1999, 2002, 2005, 2008)
data <- data.frame(sums, c("point", "nonpoint", "onroad", "nonroad"), rep(years, each=4))
colnames(data) <- c("Total PM2.5", "Type", "Year")
View(data)
point99
nonpoint99
onroad99
data_ordered <- matrix(data$Total,ncol = 4)
View(data_ordered)
colnames(data_ordered) = unique(data$Year)
rownames(data_ordered) = unique(data$Type)
View(data_ordered)
## Plots the graph to PNG file
png ("Q5.png", width=480, height=480)
#par(mar = c(5.1, 4.1, 4.1, 7.1), xpd = TRUE)
barplot(data_ordered, col = heat.colors(length(rownames(data_ordered))),
main="Motor Vehicle Related PM2.5 Emissions in Baltimore City, MD", xlab="Year",
ylab="PM2.5")
legend(title = "Type", "topright", fill = heat.colors(length(rownames(data_ordered))), legend = rownames(data_ordered))
dev.off()
## Plots the graph to PNG file
png ("Q5.png", width=480, height=480)
#par(mar = c(5.1, 4.1, 4.1, 7.1), xpd = TRUE)
barplot(data_ordered, col = heat.colors(length(rownames(data_ordered))),
main="Motor Vehicle Related PM2.5 Emissions in Baltimore City, MD", xlab="Year",
ylab="PM2.5")
legend(title = "Type", "topright", fill = Pastel2(length(rownames(data_ordered))), legend = rownames(data_ordered))
dev.off()
## Plots the graph to PNG file
png ("Q5.png", width=480, height=480)
#par(mar = c(5.1, 4.1, 4.1, 7.1), xpd = TRUE)
barplot(data_ordered, col = heat.colors(length(rownames(data_ordered))),
main="Motor Vehicle Related PM2.5 Emissions in Baltimore City, MD", xlab="Year",
ylab="PM2.5")
legend(title = "Type", "topright", fill = topo.colors(length(rownames(data_ordered))), legend = rownames(data_ordered))
dev.off()
## Plots the graph to PNG file
png ("Q5.png", width=480, height=480)
#par(mar = c(5.1, 4.1, 4.1, 7.1), xpd = TRUE)
barplot(data_ordered, col = topo.colors(length(rownames(data_ordered))),
main="Motor Vehicle Related PM2.5 Emissions in Baltimore City, MD", xlab="Year",
ylab="PM2.5")
legend(title = "Type", "topright", fill = topo.colors(length(rownames(data_ordered))), legend = rownames(data_ordered))
dev.off()
## Plots the graph to PNG file
png ("Q5.png", width=480, height=480)
#par(mar = c(5.1, 4.1, 4.1, 7.1), xpd = TRUE)
barplot(data_ordered, col = terrain.colors(length(rownames(data_ordered))),
main="Motor Vehicle Related PM2.5 Emissions in Baltimore City, MD", xlab="Year",
ylab="PM2.5")
legend(title = "Type", "topright", fill = topo.colors(length(rownames(data_ordered))), legend = rownames(data_ordered))
dev.off()
## Plots the graph to PNG file
png ("Q5.png", width=480, height=480)
#par(mar = c(5.1, 4.1, 4.1, 7.1), xpd = TRUE)
barplot(data_ordered, col = cm.colors(length(rownames(data_ordered))),
main="Motor Vehicle Related PM2.5 Emissions in Baltimore City, MD", xlab="Year",
ylab="PM2.5")
legend(title = "Type", "topright", fill = topo.colors(length(rownames(data_ordered))), legend = rownames(data_ordered))
dev.off()
barplot(data_ordered, col = topo.colors(length(rownames(data_ordered))),
main="Motor Vehicle Related PM2.5 Emissions in Baltimore City, MD", xlab="Year",
ylab="PM2.5")
legend(title = "Type", "topright", fill = topo.colors(length(rownames(data_ordered))), legend = rownames(data_ordered))
dev.off()
barplot(data_ordered, col = topo.colors(length(rownames(data_ordered))),
main="Motor Vehicle Related PM2.5 Emissions in Baltimore City, MD", xlab="Year",
ylab="PM2.5")
legend(title = "Type", "topright", fill = topo.colors(length(rownames(data_ordered))), legend = rownames(data_ordered))
dev.off()
## Plots the graph to PNG file
png ("Q5.png", width=480, height=480)
#par(mar = c(5.1, 4.1, 4.1, 7.1), xpd = TRUE)
barplot(data_ordered, col = topo.colors(length(rownames(data_ordered))),
main="Motor Vehicle Related PM2.5 Emissions in Baltimore City, MD", xlab="Year",
ylab="PM2.5")
legend(title = "Type", "topright", fill = topo.colors(length(rownames(data_ordered))), legend = rownames(data_ordered))
dev.off()
df
View(df)
geom_bar(data=df, aes(y = Emissions, x = fips, fill = type), stat="identity",position='stack') +
theme_bw() +
facet_grid( ~ year)
geom_bar(data=df, aes(y = Emissions, x = fips, fill = type), stat="identity",position='stack') + theme_bw() + facet_grid( ~ year)
class(df$Emissions)
test <- expand.grid('cat' = LETTERS[1:5], 'cond'= c(F,T), 'year' = 2001:2005)
test
geom_bar(data=df, aes(y = Emissions, x = fips, fill = type), stat="identity",position='stack') + theme_bw() + facet_grid( ~ year)
test$value <- floor((rnorm(nrow(test)))*100)
test$value
test
View(test)
geom_bar(data=df, aes(y = Emissions, x = fips, fill = type), stat="identity",position='stack') + theme_bw() + facet_grid( ~ year)
class(test$cat)
class(test$cond)
class(test$year)
class(test$value)
class(df$fips)
class(df$type)
df$fips <- as.factor(df$fips)
df$type <- as.factor(df$type)
geom_bar(data=df, aes(y = Emissions, x = fips, fill = type), stat="identity",position='stack') + theme_bw() + facet_grid( ~ year)
class(df$Emissions)
?aes
af <- NEI[which(NEI$SCC %in% SCCs$SCC),]
af <- subset(af, af$fips == "06037")
View(af)
cf <- NEI[which(NEI$SCC %in% SCCs$SCC),]
cf <- subset(cf, cf$fips == "24510")
remove(df)
df <- c(cf,af)
df
df <- data.frame(c(cf,af))
df <- data.frame(c(cf,af),)
df <- rbind(cf, af)
df
View(df)
View(cf)
df[1565,]
class(df$Emissions)
geom_bar(data=df, aes(y = Emissions, x = fips, fill = type), stat="identity",position='stack') + theme_bw() + facet_grid( ~ year)
ggplot() + geom_bar(data=df, aes(y = Emissions, x = fips, fill = type), stat="identity",position='stack') + theme_bw() + facet_grid( ~ year)
?gsub
df$fips <- gsub(24510, BC, df$fips)
df$fips <- gsub("24510", "BC", df$fips)
View(df)
df$fips <- gsub("06037", "LA", df$fips)
View(df)
ggplot() + geom_bar(data=df, aes(y = Emissions, x = fips, fill = type), stat="identity",position='stack')
+ theme_bw() + facet_grid( ~ year)
df$fips <- as.factor(df$fips)
ggplot() + geom_bar(data=df, aes(y = Emissions, x = fips, fill = type), stat="identity",position='stack')
+ theme_bw() + facet_grid( ~ year)
View(df)
class(df$fips)
table(df$fips)
ggplot() + geom_bar(data=df, aes(y = Emissions, x = fips, fill = type), stat="identity",position='stack') + theme_bw() + facet_grid( ~ year)
source('~/datasciencecoursera/Courses/ExploratoryDataAnalysis/Project2/plot6.R')
source('~/datasciencecoursera/Courses/ExploratoryDataAnalysis/Project2/plot6.R')
source('~/datasciencecoursera/Courses/ExploratoryDataAnalysis/Project2/plot6.R')

find.packages("devtools")
find.package("devtools")
library(devtools)
find_rtools()
x <- list(foo=1:4,bar=.6)
x
x[1]
x[2]
x[2-1]
x[x>1]
x <- c(5,2,4,NA,1)
x
n
y
y <- c(f,NA,na,b,a)
y<- c("f",NA,na,"b","a")
y <- c ("f",NA,"na","b","a")
good <- complete.cases(x,y)
good
x[good]
y[good]
x <- list(5,2,4,NA,1)
x
x[1]
x[[1]]
x <- c(5,2,4,NA,1)
x
y <- c("f",NA,"na","b",a"")
y <- c("f",NA,"na","b",a")
x
y
clr
y
x
zero
exit
quit
run
y <- c("f",NA,"na","b","a")
y <- c("f",NA,"na","b","a")
x
y
rbind(x,y)
m <- rbind (x,y)
good <- complete.cases(m)
good
m
m
m <- cbind (x,y)
m
good <-complete.cases(m)
good
install.packages("swirl")
library("swirl")
swirl()
5+7
x <- 5+7
x
y <- x-3
y
z <- c(1.1,9.3.14)
z <- c(1.1,9,3.14)
?c
z
c(z,555,z)
z
z*2+100
my_sqrt <- sqrt(z-1)
my_sqrt
my_div <- z/my_sqrt
my_div
c(1,2,3,4) + c(0,10)
c(1,2,3,4) + C(0,10,100)
c(1,2,3,4) + c(0,10,100)
z*2+1000
my_div
bye()
swirl()
swirl()
library("swirl")
swirl()
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4,5)
dim(my_vector)
attritubtes(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix()
?matrix
my_matrix2 <- matrix(1:20,nrow=4,ncol=5)
identical(my_matrix,my_matrix2)
patients <- c("Bill","Gina","Kelly",Sean"")
patients <- c("Bill","Gina","Kelly","Sean"")
patients <- c("Bill","Gina","Kelly","Sean)
patients <- c("Bill","Gina","Kelly","Sean")
cbind(patients,my_matrix)
my_data <- data.frame(patients,my_matrix)
my_data
class(my_data)
cnames <- c("patient","age',"weight","bp","rating","test")
cnames <- c("patient","age","weight","bp","rating","test")
colnames(my_data) <- cnames
my_data
exit
bye()
swirl()
head(flags)
dim(flags)
viewinfo()
class(flags)
cls_list <- lapply(flags,class)
cls_list
class(cls_list)
as.character(cls_list)
cls_vect <- sapply(flags)
cls_vect <- sapply(flags,class)
class(cls_vect)
sum(flags$orange)
flag_colors <-flags[,11:17]
head(flag_colors)
lapply(flag_colors,sum)
play()
as.character(flag_colors)
as.character(lapply(flag_colors,sum))
nxt()
sapply(flag_colors,sum)
sapply(flag_colors,mean)
flag_shapes <- flags[,19-23]
flag_shapes <- flags[,19:23]
lapply(flag_shapes,range)
shape_mat <- sapply(flag_shapes,range)
shape_mat
class(shape_mat)
unique(c(3,4,5,5,5,6,6))
unique_vals <- lapply(flags,unique)
unique_vals
lapply(unique_vals,length)
sapply(unique_vals,unique)
sapply(unique_vals,unique)
sapply(unique_vals,length)
sapply(flags,unique)
lapply(unique_vals,function(elem) elem[2])
play()
str(flags)
?str()
summary(flags)
nxt()
sapply(flags,uniqe)
sapply(flags,unique)
play()
length(sapply(flags,unique))
sapply(flags,unique)
sapply(length(sapply(flags,unique)))
length(data,)
length(data,unique)
length(unique(data))
nxt()
vapply(flags,unique,number(1))
ok()
sapply(flags,class)
vapply(flags,class,character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate,flags$landmass,mean)
tapply(flags$population,flags$red,summary)
tapply(flags$population,flags$landmass,summary)
bye()
View(shape_mat)
View(plants)
add2 <- function(x,y) {
x+y
}
add2 <- function(x,y) {
x+y
}
add2(3,5)
above <- function(x, n)
{
use <- x > n
x[use]
}
x <- 1:20
above(x,12)
above <- function(x, n=10)
{
use <- x > n
x[use]
}
above(10)
above(x)
columnmean <- function(y)
{
nc < ncol(y)
means <- numeric(nc)
for(i in 1:nc)
{
means[i] <- mean(y[,i])
}
means
}
columnmean(airquality)
columnmean(data)
columnmean(flags)
columnmean <- function(y)
{
nc <- ncol(y)
means <- numeric(nc)
for(i in 1:nc)
{
means[i] <- mean(y[,i])
}
means
}
columnmean(airquality)
source('C:/Users/llau/datasciencecoursera/ProgrammingAssignment2/cachematrix.R')
m<- makeCacheMatrix(matrix(1:4,2,2))
cacheSolve(m)
cacheSolve(m)
m$set(matrix(c(1,2,3,6,5,4,9,7,8),3,3,byrow=T)
)
cacheSolve(m)
cacheSolve(m)
amatrix=makeCacheMatrix(matrix(c(1,2,3,4),nrow=2,ncol=2))
amatrix$get()
cacheSolve(amatrix)
amatrix$getinverse()
cacheSolve(amatrix)
amatrix$set(matrix(c(0,5,99,66), nrow=2, ncol=2))
cacheSolve(amatrix)
amatrix$get()
amatrix$getinverse()
amatrix$get() * amatrix$getinverse()
getwd()
library("swirl")
swirl()
ls(plants)
ls(plants)
ls()
play()
rm(plants)
ls()
nxt()
class(plants)
bye()
swirl()
class(plants)
dim(plants)
nrow(plants)
ncol(plants)
object.size(plants)
names(plants)
head(plants)
head(plants, 10)
tail(plants, 15)
summary(plants)
table(plants$Active_growth_period)
table(plants$Active_Growth_Period)
str(plants)
?sample
sample(1:6, 4, replace = TRUE)
sample(1:6, 4, replace = TRUE)
sample(1:20, 10)
LETTERS
sample(LETTERS)
flips <- sample(c(0,1),100,replacement=TRUE, prob=c(.3,.7))
flips <- sample(c(0,1),100,replace=TRUE, prob=c(.3,.7))
play()
flip = sample(c(0,1),100,replace=TRUE, prob=c(.3,.7))
nxt()
flips
sum(flips)
?rbinom
rbinom(1,size=100, prob =.7)
flips2 <- rbinomm(100,1,.7)
flips2 <- rbinom(100,1,.7)
flips2
sum(flips2)
rnorm()
?rnorm
rnorm(10)
rnorm(10,100,25)
?rpois
rpois(5,10)
my_poist = replicate(100,rpois(5,10))
my_poist <- replicate(100,rpois(5,10))
my_pois <- replicate(100,rpois(5,10))
my_pois
cm <- colMeans(my_pois)
hist(cm)
getwd()
install.packages(“RMySQL”, type = “source”)
install.packages(“RMySQL”, type = “source”)
install.packages(“RMySQL”, type = “install.packages(“RMySQL”, type = “source”)”)
install.packages(“RMySQL”, type = “C:\Program Files\MySQL\MySQL Server 5.6\lib”)
install.packages(“RMySQL”, type = “source”)
install.packages(“RMySQL”, type = “source”)
install.packages(“RMySQL”, type = “source”)
install.packages(“RMySQL”, type = “source”)
install.packages(“RMySQL”, type = “source”)
install.packages('RMySQL',type='source')
library(RMySQL)
install.packages(“RMySQL”, type = “source”)
install.packages('RMySQL',type='source')
library("RMySQL")
library(RMySQL)
Sys.setenv(MYSQL_HOME = “C:/Program Files/MySQL/MySQL Server 5.7″)
Sys.setenv(MYSQL_HOME = 'C:/Program Files/MySQL/MySQL Server 5.7')
Sys.getenv('MYSQL_HOME'')
Sys.getenv('MYSQL_HOME')
install.packages('RMySQL', type = 'source')
library(RMySQL)
file.copy(“C:/Program Files/MySQL/MySQL Server 5.6/lib/libmysql.dll”,
+ “C:/Program Files/MySQL/MySQL Server 5.6/bin”)
file.copy('C:/Program Files/MySQL/MySQL Server 5.6/lib/libmysql.dll',
+ 'C:/Program Files/MySQL/MySQL Server 5.6/bin'')
file.copy('C:/Program Files/MySQL/MySQL Server 5.6/lib/libmysql.dll',
+ 'C:/Program Files/MySQL/MySQL Server 5.6/bin)
file.copy('C:/Program Files/MySQL/MySQL Server 5.6/lib/libmysql.dll',
+ 'C:/Program Files/MySQL/MySQL Server 5.6/bin')
file.copy('C:/Program Files/MySQL/MySQL Server 5.6/lib/libmysql.dll',
+ 'C:/Program Files/MySQL/MySQL Server 5.6/bin')
Sys.setenv(MYSQL_HOME = 'C:/Program Files/MySQL/MySQL Server 5.6')
Sys.getenv('MYSQL_HOME')
install.packages('RMySQL', type = 'source')
library(RMySQL)
install.packages('RMySQL', type = 'source')
library(RMySQL)
library(DBI)
library(RMySQL)
install.packages('RMySQL', type = 'source')
install.packages('RMySQL', type = 'source')
library(RMySQL)
install.packages('RMySQL', type = 'source')
library(RMySQL)
exit
install.packages('RMySQL', type = 'source')
library(RMySQL)
install.packages('RMySQL', type = 'source')
library(RMySQL)
install.packages('RMySQL', type = 'source')
install.packages('RMySQL', type = 'source')
library(RMySQL)
install.packages('RMySQL', type = 'source')
library(RMySQL)
install.packages('RMySQL', type = 'source')
library(RMySQL)
install.packages('RMySQL', type = 'source')
install.packages('RMySQL', type = 'source')
r.home()
R.home()
install.packages('RMySQL', type = 'source')
source("http://bioconductor.org/biocLite.R")
biocLite("rhdf5")
library(rhdf5)
created = h5createFile("example.h5")
created
created = h5createGroup("example.h5", "foo")
created
h5ls("example.h5")
created = h5createGroup("example.h5", "baa")
created
h5ls("example.h5")
created =h5createGroup("example.h5","foo/foobaa")
h5ls("example.h5")
h5("example.h5")
getwd()
NEI <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
setwd("~/LL/Coursera/Courses/ExploratoryDataAnalysis/Project2")
NEI <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
View(NEI)
View(SCC)
class(NEI$year)
y1999 <- subset(NEI, NEI$year = 1999)
y1999 <- subset(NEI, NEI$year == 1999)
View(`y1999`)
tail(y1999)
tail(NEI)
sum1999 <- sum(y1999$Emissions)
sum1999
class(y1999$Emissions)
y2002 <- subset(NEI, NEI$year == 2002)
y2005 <- subset(NEI, NEI$year == 2005)
y2008 <- subset(NEI, NEI$year == 2008)
sum2002 <- sum(y2002$Emissions)
sum2005 <- sum(y2005$Emissions)
sum2008 <- sum(y2008$Emissions)
totalPM2.5 <- data.frame()
totalPM2.5 <- rbind(c(sum1999, sum2002, sum2005, sum2008))
totalPM2.5
ncols(totalPM2.5)
numcols(totalPM2.5)
ncol(totalPm2.5)
ncol(totalPM2.5)
totalPM2.5 <- data.frame()
totalPM2.5 <- cbind(c(sum1999, sum2002, sum2005, sum2008))
totalPM2.5
totalPM2.5 <- rbind(c(1999, 2002, 2005, 2008))
totalPM2.5
totalPM2.5 <- cbind(c(sum1999, sum2002, sum2005, sum2008))
years <- c(1999, 2002, 2005, 2008)
totalPM2.5 <- cbind(totalPM2.5, years)
totalPM2.5
totalPM2.5 <- data.frame()
totalPM2.5 <- cbind(c(sum1999, sum2002, sum2005, sum2008))
totalPM2.5 <- cbind(totalPM2.5, years)
totalPM2.5
colnames(totalPM2.5) <- c("totalPM2.5", "year")
totalPM.25
totalPM2.5
class(totalPM2.5$totalPM2.5)
class(totalPM2.5[1])
barplot(totalPM2.5, main="Total PM2.5, All Sources", xlab="Year", ylab="PM2.5")
table(totalPM2.5$year)
class(totalPM2.5)
totalPM2.5 <- data.frame()
totalPM2.5 <- cbind(c(sum1999, sum2002, sum2005, sum2008))
totalPM2.5 <- cbind(totalPM2.5, years)
class(totalPM2.5)
totalPM2.5 <- data.frame()
sums <- c(sum1999, sum2002, sum2005, sum2008)
years <- c(1999, 2002, 2005, 2008)
totalPM2.5 <- cbind(c(sums, years)
)
totalPM2.5
totalPM2.5 <- data.frame()
sums <- c(sum1999, sum2002, sum2005, sum2008)
years <- c(1999, 2002, 2005, 2008)
totalPM2.5 <- cbind(sums, years)
totalPM2.5
totalPM2.5 <- data.frame()
sums <- c(sum1999, sum2002, sum2005, sum2008)
years <- c(1999, 2002, 2005, 2008)
totalPM2.5 <- cbind(sums, years)
colnames(totalPM2.5) <- c("totalPM2.5", "year")
class(totalPM2.5)
?data.frame
sums <- c(sum1999, sum2002, sum2005, sum2008)
years <- c(1999, 2002, 2005, 2008)
totalPM2.5 <- data.frame(sums, years)
colnames(totalPM2.5) <- c("totalPM2.5", "year")
totalPM2.5
class(totalPM2.5)
barplot(totalPM2.5, main="Total PM2.5, All Sources", xlab="Year", ylab="PM2.5")
table(totalPM2.5$year)
table(totalPM2.5$totalPM2.5)
x <- table(totalPM2.5$totalPM2.5)
barplot(x, main="Total PM2.5, All Sources", xlab="Year", ylab="PM2.5")
?barplot
barplot(totalPM2.5$totalPM2.5, main="Total PM2.5, All Sources", xlab="Year", ylab="PM2.5")
sums
sums <- c(sum1999/1000000, sum2002, sum2005, sum2008)
sums
sums <- c(sum1999/1,000,000, sum2002/1,000,000, sum2005/1,000,000, sum2008/1,000,000)
totalPM2.5 <- data.frame(sums, years)
totalPM2.5
sums <- c(sum1999/1000000, sum2002/1000000, sum2005/1000000, sum2008/1000000)
totalPM2.5 <- data.frame(sums, years)
totalPM2.5
sums <- c(sum1999/1000000, sum2002/1000000, sum2005/1000000, sum2008/1000000)
round(sums, digits=2)
years <- c(1999, 2002, 2005, 2008)
totalPM2.5 <- data.frame(sums, years)
colnames(totalPM2.5) <- c("totalPM2.5", "year")
totalPM2.5
sums
sums <- c(sum1999/1000000, sum2002/1000000, sum2005/1000000, sum2008/1000000)
sums <- round(sums, digits=2)
years <- c(1999, 2002, 2005, 2008)
totalPM2.5 <- data.frame(sums, years)
colnames(totalPM2.5) <- c("totalPM2.5", "year")
totalPM2.5
sums <- c(sum1999/1000000, sum2002/1000000, sum2005/1000000, sum2008/1000000)
sums <- round(sums, digits=2)
years <- c(1999, 2002, 2005, 2008)
totalPM2.5 <- data.frame(sums, years)
colnames(totalPM2.5) <- c("totalPM2.5 (in millions)", "year")
totalPM2.5
barplot(totalPM2.5$totalPM2.5, main="Total PM2.5 in millions, All Sources", xlab="Year", ylab="PM2.5")
barplot(totalPM2.5$totalPM2.5, main="Total PM2.5, All Sources", xlab="Year", ylab="PM2.5 (millions")
?barplot
barplot(totalPM2.5$totalPM2.5, names.arg=totalPM2.5$year, main="Total PM2.5, All Sources", xlab="Year", ylab="PM2.5 (millions")
barplot(totalPM2.5$totalPM2.5, names.arg=totalPM2.5$year, main="Total PM2.5, All Sources",
xlab="Year", ylab="PM2.5 (millions)")
## Subsets NEI data frame into years needed for plot
y1999 <- subset(NEI, NEI$year == 1999)
y2002 <- subset(NEI, NEI$year == 2002)
y2005 <- subset(NEI, NEI$year == 2005)
y2008 <- subset(NEI, NEI$year == 2008)
## Sums up total PM2.5 emissions per year
sum1999 <- sum(y1999$Emissions)
sum2002 <- sum(y2002$Emissions)
sum2005 <- sum(y2005$Emissions)
sum2008 <- sum(y2008$Emissions)
## Create data frame with totals from years
sums <- c(sum1999/1000000, sum2002/1000000, sum2005/1000000, sum2008/1000000)
sums <- round(sums, digits=2)
years <- c(1999, 2002, 2005, 2008)
totalPM2.5 <- data.frame(sums, years)
colnames(totalPM2.5) <- c("totalPM2.5 (in millions)", "year")
## Plots the graph to PNG file
png ("Q1.png", width=480, height=480)
barplot(totalPM2.5$totalPM2.5, names.arg=totalPM2.5$year, main="Total PM2.5, All Sources",
xlab="Year", ylab="PM2.5 (millions)")
dev.off()
